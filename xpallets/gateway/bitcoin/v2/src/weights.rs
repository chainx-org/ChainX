//! Autogenerated weights for xpallet_gateway_bitcoin_v2_pallet
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-07-01, STEPS: `[20, ]`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 128

// Executed Command:
// target/release/chainx
// benchmark
// --dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// xpallet_gateway_bitcoin_v2_pallet
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --raw
// --output
// .

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

pub trait WeightInfo {
    fn update_exchange_rate() -> Weight;
    fn register_vault() -> Weight;
    fn add_extra_collateral() -> Weight;
    fn request_issue() -> Weight;
    fn execute_issue() -> Weight;
    fn cancel_issue() -> Weight;
    fn request_redeem() -> Weight;
}

/// Weight functions for xpallet_gateway_bitcoin_v2_pallet.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
    fn update_exchange_rate() -> Weight {
        (28_361_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(2 as Weight))
            .saturating_add(T::DbWeight::get().writes(2 as Weight))
    }
    fn register_vault() -> Weight {
        (64_085_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(4 as Weight))
            .saturating_add(T::DbWeight::get().writes(4 as Weight))
    }
    fn add_extra_collateral() -> Weight {
        (51_519_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(3 as Weight))
            .saturating_add(T::DbWeight::get().writes(2 as Weight))
    }
    fn request_issue() -> Weight {
        (89_504_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(8 as Weight))
            .saturating_add(T::DbWeight::get().writes(4 as Weight))
    }
    fn execute_issue() -> Weight {
        (287_656_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(19 as Weight))
            .saturating_add(T::DbWeight::get().writes(11 as Weight))
    }
    fn cancel_issue() -> Weight {
        (60_086_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(3 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    fn request_redeem() -> Weight {
        (121_563_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(9 as Weight))
            .saturating_add(T::DbWeight::get().writes(5 as Weight))
    }
}
